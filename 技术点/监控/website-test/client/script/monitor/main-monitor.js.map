{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/behavior.js","webpack:///./src/errorCatch.js","webpack:///./src/index.js","webpack:///./src/performance.js","webpack:///./src/resource.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGe,uEAAQ,E;;;;;;;;;;;;AC1DvB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD,+CAA+C;AAC/C;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEe,yEAAU,EAAC;;;AAG1B;AACA;AACA;;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACN;AACI;AACJ;;AAElC,oDAAW;AACX;AACA,CAAC;;AAED,iDAAQ;AACR;AACA,CAAC;;AAED,mDAAU;AACV;AACA,CAAC;;AAED,iDAAQ,oBAAoB;;;;;;;;;;;;;ACjB5B;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACvH3B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB,2BAA2B;AACnD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEe,uEAAQ,EAAC","file":"main-monitor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// // /html/body/div[2]/ul/li[2]\n// 用户行为分析，获取用户的点击（或更多操作）页面的流程和顺序\n\nclass Behavior {\n  static init(callBackFn) {\n    document.addEventListener(\n      \"click\",\n      (e) => {\n        const xpath = Util.getXPath(e.target);\n        console.log(\"xpath\", xpath);\n      },\n      false\n    );\n  }\n}\n\nconst Util = {\n  getXPath(ele) {\n    if (!(ele instanceof Element)) {\n      return;\n    }\n\n    if (ele.nodeType !== 1) {\n      return;\n    }\n\n    const rootEle = document.body;\n    if (ele === rootEle) {\n      return;\n    }\n\n    let xpath = \"\";\n    let childIndex = (ele) => {\n      let parent = ele.parentNode;\n      let children = Array.prototype.slice\n        .call(parent.childNodes)\n        .filter((_) => _.nodeType === 1);\n      let i = 0;\n      for (let _i = 0, len = children.length; _i < len; _i++) {\n        if (children[_i] === ele) {\n          i = _i;\n          break;\n        }\n      }\n      return i === 0 ? \"\" : \"[\" + i + \"]\";\n    };\n\n    while (ele !== document) {\n      let tag = ele.tagName.toLocaleLowerCase();\n      let eleIndex = childIndex(element);\n      xpath = \"/\" + tag + eleIndex + xpath;\n      ele = ele.parentNode;\n    }\n    return xpath;\n  },\n};\n\n\nexport default Behavior;","class ErrorCatch {\n  static init(callBackFn) {\n    let _error = window.onerror;\n    window.onerror = function (...args) {\n      const [msg, url, lineTo, columnNo, error] = args;\n      const errorInfo = Util.formatError(error);\n      errorInfo._errorMsg = msg;\n      errorInfo._scriptURI = url;\n      errorInfo._lineTo = lineTo;\n      errorInfo._columnNo = columnNo;\n      errorInfo._type = 'onerror';\n    \n      console.log('异常信息处理 =====》 onerror =====》')\n      callBackFn(errorInfo);\n      // _error && _error.apply(this, args);\n      return true;\n    };\n\n    let _onunhandledrejection = window.onunhandledrejection;\n    window.onunhandledrejection = function(...args) {\n        let e = args[0];\n        let reason = e.reason;\n        \n        const errorInfo = {\n            type: e.type || 'unhandledrejection',\n            reason\n        }\n\n        console.log('异常信息处理 =====》 onunhandledrejection =====》')\n        callBackFn(errorInfo);\n        return false;\n        // _onunhandledrejection && _onunhandledrejection.apply(this, args);\n    }\n  }\n}\n\nconst Util = {\n  formatError(errObj) {\n    let col = errObj.column || errObj.columnNumber; // Safari Firefox\n    let row = errObj.line || errObj.lineNumber; // Safari Firefox\n    let message = errObj.message;\n    let name = errObj.name;\n    let { stack } = errObj;\n    // ReferenceError: b is not defined at http://localhost:8080/:10:21\n    if (stack) {\n      let matchUrl = stack.match(/https?:\\/\\/[^\\n]+/)[0];\n      let rowColumn = matchUrl.match(/https?:\\/\\/[\\S]+(:\\d+:\\d+)/)[1];\n      let index = matchUrl.indexOf(rowColumn);\n\n      let errorUrl = matchUrl.slice(0, index);\n      let [, errRow, errColumn] = rowColumn.match(/:(\\d+):(\\d+)/);\n\n      return {\n        content: stack,\n        col: Number(col || errColumn),\n        row: Number(row || errRow),\n        message,\n        name,\n        errorUrl,\n      };\n    }\n    return {\n      col,\n      row,\n      message,\n      name,\n    };\n  },\n};\n\nexport default ErrorCatch;\n\n\n// 关于异常的信息获取还有要考虑 现代化的使用webpack打包后的应用，应用的代码都被混淆压缩，无法准确获取错误信息\n// 关于这类错误，需要保留打包后的sourceMap文件，通过工具将编译后的代码转化为源码\n// 查看 app-source-map.js文件 查看此类问题的demo\n","import Performance from \"./performance\";\nimport Resource from \"./resource\";\nimport ErrorCatch from \"./errorCatch\";\nimport Behavior from \"./behavior\";\n\nPerformance.init((result) => {\n  console.log(result);\n});\n\nResource.init((result) => {\n  console.log(result);\n});\n\nErrorCatch.init((result) => {\n  console.log(result);\n});\n\nBehavior.init((result) => {});\n","// 参考文档：https://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceTiming\n// 主要获取页面加载性能相关的数据\n\nclass Performance {\n  static init(callBackFn) {\n    const performance =\n      window.performance ||\n      window.mozPerformance ||\n      window.msPerformance ||\n      window.webkitPerformance;\n    Util.domReady(performance).then((result) => {\n      console.log('性能分析结构 =====》 DomReady 阶段 =====》')\n      callBackFn(result)\n    });\n    Util.onload(performance).then((result) => {\n      console.log('性能分析结构 =====》 Onload 阶段 =====》')\n      callBackFn(result)\n    });\n  }\n}\n\nconst Util = {\n  // DOM解析完成\n  domReady(performance) {\n    return new Promise((resolve) => {\n      if (document.readyState === \"interactive\") {\n        resolve(runCheck());\n      } else {\n        Util.addEventListener(\"DOMContentLoaded\", function () {\n          resolve(runCheck());\n        });\n      }\n    });\n\n    function runCheck() {\n      return new Promise((resolve) => {\n        let timer;\n        if (performance.timing.domInteractive) {\n          clearTimeout(timer);\n          resolve(reportPerformance(performance));\n        } else {\n          timer = setTimeout(() => {\n            resolve(runCheck());\n          }, 100);\n        }\n      });\n    }\n  },\n\n  // DOM加载完成\n  onload(performance) {\n    return new Promise((resolve) => {\n      if (document.readyState === \"complete\") {\n        resolve(runCheck());\n      } else {\n        Util.addEventListener(\"load\", function () {\n          resolve(runCheck());\n        });\n      }\n    });\n\n    function runCheck() {\n      return new Promise((resolve) => {\n        let timer;\n        if (performance.timing.loadEventEnd) {\n          clearTimeout(timer);\n          resolve(reportPerformance(performance));\n        } else {\n          timer = setTimeout(() => {\n            resolve(runCheck());\n          }, 100);\n        }\n      });\n    }\n  },\n\n  addEventListener: function (name, callback) {\n    if (window.addEventListener) {\n      return window.addEventListener(name, callback);\n    } else if (window.attachEvent) {\n      return window.attachEvent(\"on\" + name, callback);\n    }\n  },\n};\n\nfunction reportPerformance(performance) {\n  function filterTime(a, b) {\n    return a > 0 && b > 0 && a - b >= 0 ? a - b : undefined;\n  }\n  const perTime = performance.timing;\n  return {\n    // 网络建连\n    pervPage: filterTime(perTime.fetchStart, perTime.navigationStart), // 上一个页面完全销毁时间\n    redirect: filterTime(perTime.responseEnd, perTime.redirectStart), // 页面重定向时间\n    dns: filterTime(perTime.domainLookupEnd, perTime.domainLookupStart), // DNS查找时间\n    connect: filterTime(perTime.connectEnd, perTime.connectStart), // TCP建连时间\n    network: filterTime(perTime.connectEnd, perTime.navigationStart), // 网络总耗时\n\n    // 网络接收\n    send: filterTime(perTime.responseStart, perTime.requestStart), // 前端从发送到接收到后端第一个返回\n    receive: filterTime(perTime.responseEnd, perTime.responseStart), // 接收页面时间\n    request: filterTime(perTime.responseEnd, perTime.requestStart), // 请求页面总时间\n\n    // 前端渲染\n    dom: filterTime(perTime.domComplete, perTime.domLoading), // dom解析时间\n    loadEvent: filterTime(perTime.loadEventEnd, perTime.loadEventStart), // loadEvent时间\n    frontend: filterTime(perTime.loadEventEnd, perTime.domLoading), // 前端总时间\n\n    // 关键阶段\n    load: filterTime(perTime.loadEventEnd, perTime.navigationStart), // 页面完全加载总时间\n    domReady: filterTime(\n      perTime.domContentLoadedEventStart,\n      perTime.navigationStart\n    ), // domready时间\n    interactive: filterTime(perTime.domInteractive, perTime.navigationStart), // 可操作时间\n    ttfb: filterTime(perTime.responseStart, perTime.navigationStart), // 首字节时间\n  };\n}\n\nexport default Performance;\n","class Resource {\n  static init(callBackFn) {\n    const performance =\n      window.performance ||\n      window.mozPerformance ||\n      window.msPerformance ||\n      window.webkitPerformance;\n\n    if (!performance) {\n      return;\n    }\n\n    if (window.PerformanceObserver) {\n      const observer = new PerformanceObserver((list) => {\n        const entries = list.getEntries();\n        const resourceInfoArr = Util.format(entries);\n        console.log(\"=====> resource ====>\");\n        callBackFn(resourceInfoArr);\n      });\n      observer.observe({ entryTypes: [\"resource\"] });\n    } else {\n      if (performance.readyState === \"complete\") {\n        const entries = performance.getEntriesByType(\"resource\");\n        const resourceInfoArr = Util.format(entries);\n        console.log(\"=====> resource ====>\");\n        callBackFn(resourceInfoArr);\n      } else {\n        window.addEventListener(\"load\", () => {\n          const entries = performance.getEntriesByType(\"resource\");\n          const resourceInfoArr = Util.format(entries);\n          console.log(\"=====> resource ====>\");\n          callBackFn(resourceInfoArr);\n        });\n      }\n    }\n  }\n}\n\nconst Util = {\n  format(entries) {\n    return entries.map((item) => this.resolvePerformanceTiming(item));\n  },\n\n  resolvePerformanceTiming(timing) {\n    function filterTime(a, b) {\n      return a > 0 && b > 0 && a - b >= 0 ? a - b : undefined;\n    }\n\n    return {\n      initiatorType: timing.initiatorType, // initiatorType 表示初始化性能条目的资源类型 eg：xmlhttprequest\n      name: timing.name, // name == resources URL | eg: http://localhost:8080/sockjs-node/info?t=1589418505919\n      duration: parseInt(timing.duration), // 它是responseEnd和startTime属性之间的差异\n      redirect: filterTime(timing.redirectEnd, timing.redirectStart), // 重定向\n      dns: filterTime(timing.domainLookupEnd, timing.domainLookupStart), // DNS解析\n      connect: filterTime(timing.connectEnd, timing.connectStart), // TCP建连\n      network: filterTime(timing.connectEnd, timing.startTime), // 网络总耗时\n\n      send: filterTime(timing.responseStart, timing.requestStart), // 发送开始到接受第一个返回\n      receive: filterTime(timing.responseEnd, timing.responseStart), // 接收总时间\n      request: filterTime(timing.responseEnd, timing.requestStart), // 总时间\n\n      ttfb: filterTime(timing.responseStart, timing.requestStart), // 首字节时间\n    };\n  },\n};\n\nexport default Resource;\n"],"sourceRoot":""}